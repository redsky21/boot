<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.chs.boot.gerp.core.generate.mapper.CoreGenerateMapper">


  <select id="getConvertDataType"
    resultType="com.chs.boot.gerp.core.generate.model.ConvertDataTypeVO">
    SELECT maria_Data_type, java_Data_type, ts_data_type
    FROM tep_data_type
  </select>
  <!--retrieveTepGenTemplate-->
  <select id="retrieveTepGenTemplate"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenTemplateEO">
    SELECT *
    FROM tep_gen_template
    WHERE template_type = #{templateType}
  </select>

  <select id="retrieveTepGenFileInfo"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoVO"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoConditionVO">

    SELECT * FROM tep_gen_file_info

    WHERE 1=1
    <if test='fileSeq!=null'>AND file_seq=#{fileSeq}</if>
    <if test='packageNo!=null'>AND package_no=#{packageNo}</if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(packageName)'>AND
      package_name=#{packageName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(fileName)'>AND
      file_name=#{fileName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(fileType)'>AND
      file_type=#{fileType}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(fileContents)'>AND
      file_contents=#{fileContents}
    </if>
  </select>
  <insert id="insertMulti" parameterType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoEO">
    INSERT INTO tep_gen_file_info
    (
    file_seq
    ,package_no
    ,package_name
    ,file_name
    ,file_contents
    ,file_type
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.fileSeq}
      ,#{item.packageNo}
      ,#{item.packageName}
      ,#{item.fileName}
      ,#{item.fileContents}
      ,#{item.fileType}
      )
    </foreach>
  </insert>
  <delete id="deleteMulti" parameterType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoEO">
    DELETE
    FROM tep_gen_file_info
    WHERE file_seq IN
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item.fileSeq}
    </foreach>
  </delete>
  <update id="updateMulti" parameterType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_file_info
      SET
      package_no = #{item.packageNo}
      ,package_name = #{item.packageName}
      ,file_name = #{item.fileName}
      ,file_contents = #{item.fileContents}
      ,file_type = #{item.fileType}
      WHERE file_seq = #{item.fileSeq}
    </foreach>
  </update>
  <select id="retrieveTepGenFileInfoByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenFileInfoEO">
    SELECT file_seq
         , package_no
         , package_name
         , file_name
         , file_contents
         , file_type
    FROM tep_gen_file_info
    WHERE file_seq = #{fileSeq}
  </select>
  <select id="retrieveTepGenMapperMethodInfo"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoVO"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoConditionVO">

    SELECT * FROM tep_gen_mapper_method_info
    WHERE 1=1

    AND 1=1
    <if test='methodSeq!=null'>AND method_seq=#{methodSeq}</if>
    <if test='packageNo!=null'>AND package_no=#{packageNo}</if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(mapperPackageName)'>AND
      mapper_package_name=#{mapperPackageName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(mapperXmlName)'>AND
      mapper_xml_name=#{mapperXmlName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(mapperClassName)'>AND
      mapper_class_name=#{mapperClassName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodAnnotationName)'>AND
      method_annotation_name=#{methodAnnotationName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodReturnClassName)'>AND
      method_return_class_name=#{methodReturnClassName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodName)'>AND
      method_name=#{methodName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodParamClassName)'>AND
      method_param_class_name=#{methodParamClassName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodParamInstantName)'>AND
      method_param_instant_name=#{methodParamInstantName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(xmlMethodType)'>AND
      xml_method_type=#{xmlMethodType}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(sqlStmt)'>AND sql_stmt=#{sqlStmt}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(tableName)'>AND
      table_name=#{tableName}
    </if>
  </select>
  <insert id="insertMultiTepGenMapperMethodInfo"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoEO">
    INSERT INTO tep_gen_mapper_method_info
    (
    method_seq
    ,package_no
    ,mapper_package_name
    ,mapper_xml_name
    ,mapper_class_name
    ,method_annotation_name
    ,method_return_class_name
    ,method_name
    ,method_param_class_Name
    ,method_param_instant_Name
    ,xml_method_type
    ,sql_stmt
    ,table_name
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.methodSeq}
      ,#{item.packageNo}
      ,#{item.mapperPackageName}
      ,#{item.mapperXmlName}
      ,#{item.mapperClassName}
      ,#{item.methodAnnotationName}
      ,#{item.methodReturnClassName}
      ,#{item.methodName}
      ,#{item.methodParamClassName}
      ,#{item.methodParamInstantName}
      ,#{item.xmlMethodType}
      ,#{item.sqlStmt}
      ,#{item.tableName}
      )
    </foreach>
  </insert>
  <delete id="deleteMultiTepGenMapperMethodInfo"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoEO">
    DELETE
    FROM tep_gen_mapper_method_info
    WHERE method_seq IN
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item.methodSeq}
    </foreach>
  </delete>
  <update id="updateMultiTepGenMapperMethodInfo"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_mapper_method_info
      SET
      package_no = #{item.packageNo}
      ,mapper_package_name = #{item.mapperPackageName}
      ,mapper_xml_name = #{item.mapperXmlName}
      ,mapper_class_name = #{item.mapperClassName}
      ,method_annotation_name = #{item.methodAnnotationName}
      ,method_return_class_name = #{item.methodReturnClassName}
      ,method_name = #{item.methodName}
      ,method_param_class_Name = #{item.methodParamClassName}
      ,method_param_instant_Name = #{item.methodParamInstantName}
      ,xml_method_type = #{item.xmlMethodType}
      ,sql_stmt = #{item.sqlStmt}
      ,table_name = #{item.tableName}
      WHERE method_seq = #{item.methodSeq}
    </foreach>
  </update>
  <select id="retrieveTepGenMapperMethodInfoByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenMapperMethodInfoEO">
    SELECT method_seq
         , package_no
         , mapper_package_name
         , mapper_xml_name
         , mapper_class_name
         , method_annotation_name
         , method_return_class_name
         , method_name
         , method_param_class_Name
         , method_param_instant_Name
         , xml_method_type
         , sql_stmt
         , table_name
    FROM tep_gen_mapper_method_info
    WHERE method_seq = #{methodSeq}
  </select>
  <select id="getNextVal" resultType="com.chs.boot.gerp.core.generate.model.SequenceVO"
    parameterType="com.chs.boot.gerp.core.generate.model.SequenceConditionVO"
    flushCache="true" useCache="false">
		<![CDATA[
    select nextval(${sequenceName}) as next_val
    ]]>
	</select>
  <select id="retrieveTepGenServiceMethodInfo"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO">

    SELECT *
    FROM tep_gen_service_method_info
    WHERE 1=1

    AND 1=1
    <if test='methodSeq!=null'>AND method_seq=#{methodSeq}</if>
    <if test='packageNo!=null'>AND package_no=#{packageNo}</if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(servicePackageName)'>AND
      service_package_name=#{servicePackageName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(serviceClassName)'>AND
      service_class_name=#{serviceClassName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodAnnotationName)'>AND
      method_annotation_name=#{methodAnnotationName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodAccessor)'>AND
      method_accessor=#{methodAccessor}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodReturnClassName)'>AND
      method_return_class_name=#{methodReturnClassName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodName)'>AND
      method_name=#{methodName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodParamClassName)'>AND
      method_param_class_name=#{methodParamClassName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodParamInstantName)'>AND
      method_param_instant_name=#{methodParamInstantName}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(methodContents)'>AND
      method_contents=#{methodContents}
    </if>
    <if test='@com.chs.boot.common.util.MyBatisUtil@isNotEmpty(tableName)'>AND
      table_name=#{tableName}
    </if>
  </select>
  <insert id="insertMultiTepGenServiceMethodInfo"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO">
    INSERT INTO tep_gen_service_method_info
    (
    method_seq
    ,package_no
    ,service_package_name
    ,service_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,method_name
    ,method_param_class_Name
    ,method_param_instant_Name
    ,method_contents
    ,table_name
    ,add_dataset_param
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.methodSeq}
      ,#{item.packageNo}
      ,#{item.servicePackageName}
      ,#{item.serviceClassName}
      ,#{item.methodAnnotationName}
      ,#{item.methodAccessor}
      ,#{item.methodReturnClassName}
      ,#{item.methodName}
      ,#{item.methodParamClassName}
      ,#{item.methodParamInstantName}
      ,#{item.methodContents}
      ,#{item.tableName}
      ,#{item.addDatasetParam}
      )
    </foreach>
  </insert>
  <delete id="deleteMultiTepGenServiceMethodInfo"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO">
    DELETE
    FROM tep_gen_service_method_info
    WHERE method_seq IN
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item.methodSeq}
    </foreach>
  </delete>
  <update id="updateMultiTepGenServiceMethodInfo"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_service_method_info
      SET
      package_no = #{item.packageNo}
      ,service_package_name = #{item.servicePackageName}
      ,service_class_name = #{item.serviceClassName}
      ,method_annotation_name = #{item.methodAnnotationName}
      ,method_accessor = #{item.methodAccessor}
      ,method_return_class_name = #{item.methodReturnClassName}
      ,method_name = #{item.methodName}
      ,method_param_class_Name = #{item.methodParamClassName}
      ,method_param_instant_Name = #{item.methodParamInstantName}
      ,method_contents = #{item.methodContents}
      ,table_name = #{item.tableName}
      WHERE method_seq = #{item.methodSeq}
    </foreach>
  </update>
  <select id="retrieveTepGenServiceMethodInfoByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenServiceMethodInfoEO">
    SELECT method_seq
         , package_no
         , service_package_name
         , service_class_name
         , method_annotation_name
         , method_accessor
         , method_return_class_name
         , method_name
         , method_param_class_Name
         , method_param_instant_Name
         , method_contents
         , table_name
    FROM tep_gen_service_method_info
    WHERE method_seq = #{methodSeq}
  </select>

  <insert id="insertTepGenControllerMethodInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO">
    INSERT INTO tep_gen_controller_method_info
    (
    method_seq
    ,package_no
    ,controller_package_name
    ,controller_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,method_name
    ,method_param_class_name
    ,method_param_instant_name
    ,method_contents
    ,table_name
    ,add_dataset_param
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.methodSeq}
      ,#{item.packageNo}
      ,#{item.controllerPackageName}
      ,#{item.controllerClassName}
      ,#{item.methodAnnotationName}
      ,#{item.methodAccessor}
      ,#{item.methodReturnClassName}
      ,#{item.methodName}
      ,#{item.methodParamClassName}
      ,#{item.methodParamInstantName}
      ,#{item.methodContents}
      ,#{item.tableName}
      ,#{item.addDatasetParam}
      )
    </foreach>
  </insert>
  <update id="updateTepGenControllerMethodInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_controller_method_info
      SET
      method_seq = #{item.methodSeq}
      ,package_no = #{item.packageNo}
      ,controller_package_name = #{item.controllerPackageName}
      ,controller_class_name = #{item.controllerClassName}
      ,method_annotation_name = #{item.methodAnnotationName}
      ,method_accessor = #{item.methodAccessor}
      ,method_return_class_name = #{item.methodReturnClassName}
      ,method_name = #{item.methodName}
      ,method_param_class_name = #{item.methodParamClassName}
      ,method_param_instant_name = #{item.methodParamInstantName}
      ,method_contents = #{item.methodContents}
      ,table_name = #{item.tableName}
      ,add_dataset_param = #{item.addDatasetParam}
      WHERE 1=1
      AND method_seq = #{item.methodSeq}
    </foreach>
  </update>
  <delete id="deleteTepGenControllerMethodInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO">
    DELETE FROM tep_gen_controller_method_info
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        method_seq = #{item.methodSeq}
        )
      </foreach>
    </where>
  </delete>
  <select id="retrieveTepGenControllerMethodInfoListByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO"
  >
    SELECT
    method_seq
    ,package_no
    ,controller_package_name
    ,controller_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,method_name
    ,method_param_class_name
    ,method_param_instant_name
    ,method_contents
    ,table_name
    ,add_dataset_param
    FROM tep_gen_controller_method_info
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        method_seq = #{item.methodSeq}
        )
      </foreach>
    </where>
  </select>
  <select id="retrieveTepGenControllerMethodInfoListAll"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenControllerMethodInfoEO"
  >
    SELECT
    uuid() as row_key
    ,method_seq
    ,package_no
    ,controller_package_name
    ,controller_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,method_name
    ,method_param_class_name
    ,method_param_instant_name
    ,method_contents
    ,table_name
    ,add_dataset_param
    FROM tep_gen_controller_method_info
    <where>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodSeq)'>AND
        method_seq=#{methodSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(packageNo)'>AND
        package_no=#{packageNo}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerPackageName)'>AND
        controller_package_name=#{controllerPackageName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerClassName)'>AND
        controller_class_name=#{controllerClassName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodAnnotationName)'>AND
        method_annotation_name=#{methodAnnotationName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodAccessor)'>AND
        method_accessor=#{methodAccessor}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodReturnClassName)'>AND
        method_return_class_name=#{methodReturnClassName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodName)'>AND
        method_name=#{methodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodParamClassName)'>AND
        method_param_class_name=#{methodParamClassName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodParamInstantName)'>AND
        method_param_instant_name=#{methodParamInstantName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodContents)'>AND
        method_contents=#{methodContents}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(tableName)'>AND
        table_name=#{tableName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(addDatasetParam)'>AND
        add_dataset_param=#{addDatasetParam}
      </if>
    </where>
  </select>
  <insert id="insertTepGenMasterInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO">
    INSERT INTO tep_gen_master_info
    (
    master_seq
    ,package_no
    ,package_name
    ,method_type
    ,table_name
    ,method_name
    ,sql_stmt
    ,vo_name
    ,controller_yn
    ,service_yn
    ,init_yn
    ,init_order_seq
    ,lookup_type
    ,controller_method_name
    ,controller_dataset_method_seq
    ,controller_save_method_name
    ,controller_save_method_seq
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.masterSeq}
      ,#{item.packageNo}
      ,#{item.packageName}
      ,#{item.methodType}
      ,#{item.tableName}
      ,#{item.methodName}
      ,#{item.sqlStmt}
      ,#{item.voName}
      ,#{item.controllerYn}
      ,#{item.serviceYn}
      ,#{item.initYn}
      ,#{item.initOrderSeq}
      ,#{item.lookupType}
      ,#{item.controllerMethodName}
      ,#{item.controllerDatasetMethodSeq}
      ,#{item.controllerSaveMethodName}
      ,#{item.controllerSaveMethodSeq}
      )
    </foreach>
  </insert>
  <update id="updateTepGenMasterInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_master_info
      SET
      master_seq = #{item.masterSeq}
      ,package_no = #{item.packageNo}
      ,package_name = #{item.packageName}
      ,method_type = #{item.methodType}
      ,table_name = #{item.tableName}
      ,method_name = #{item.methodName}
      ,sql_stmt = #{item.sqlStmt}
      ,vo_name = #{item.voName}
      ,controller_yn = #{item.controllerYn}
      ,service_yn = #{item.serviceYn}
      ,init_yn = #{item.initYn}
      ,init_order_seq = #{item.initOrderSeq}
      ,lookup_type = #{item.lookupType}
      ,controller_method_name = #{item.controllerMethodName}
      ,controller_dataset_method_seq = #{item.controllerDatasetMethodSeq}
      ,controller_save_method_name = #{item.controllerSaveMethodName}
      ,controller_save_method_seq = #{item.controllerSaveMethodSeq}
      WHERE 1=1
      AND master_seq = #{item.masterSeq}
    </foreach>
  </update>
  <delete id="deleteTepGenMasterInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO">
    DELETE FROM tep_gen_master_info
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        master_seq = #{item.masterSeq}
        )
      </foreach>
    </where>
  </delete>
  <select id="retrieveTepGenMasterInfoListByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO"
  >
    SELECT
    master_seq
    ,package_no
    ,package_name
    ,method_type
    ,table_name
    ,method_name
    ,sql_stmt
    ,vo_name
    ,controller_yn
    ,service_yn
    ,init_yn
    ,init_order_seq
    ,lookup_type
    ,controller_method_name
    ,controller_dataset_method_seq
    ,controller_save_method_name
    ,controller_save_method_seq
    FROM tep_gen_master_info
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        master_seq = #{item.masterSeq}
        )
      </foreach>
    </where>
  </select>
  <select id="retrieveTepGenMasterInfoListAll"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenMasterInfoEO"
  >
    SELECT
    uuid() as row_key
    ,master_seq
    ,package_no
    ,package_name
    ,method_type
    ,table_name
    ,method_name
    ,sql_stmt
    ,vo_name
    ,controller_yn
    ,service_yn
    ,init_yn
    ,init_order_seq
    ,lookup_type
    ,controller_method_name
    ,controller_dataset_method_seq
    ,controller_save_method_name
    ,controller_save_method_seq
    FROM tep_gen_master_info
    <where>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(masterSeq)'>AND
        master_seq=#{masterSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(packageNo)'>AND
        package_no=#{packageNo}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(packageName)'>AND
        package_name=#{packageName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodType)'>AND
        method_type=#{methodType}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(tableName)'>AND
        table_name=#{tableName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodName)'>AND
        method_name=#{methodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(sqlStmt)'>AND
        sql_stmt=#{sqlStmt}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(voName)'>AND
        vo_name=#{voName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerYn)'>AND
        controller_yn=#{controllerYn}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(serviceYn)'>AND
        service_yn=#{serviceYn}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(initYn)'>AND
        init_yn=#{initYn}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(initOrderSeq)'>AND
        init_order_seq=#{initOrderSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(lookupType)'>AND
        lookup_type=#{lookupType}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerMethodName)'>AND
        controller_method_name=#{controllerMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerDatasetMethodSeq)'>
        AND
        controller_dataset_method_seq=#{controllerDatasetMethodSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerSaveMethodName)'>
        AND
        controller_save_method_name=#{controllerSaveMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerSaveMethodSeq)'>AND
        controller_save_method_seq=#{controllerSaveMethodSeq}
      </if>
    </where>
  </select>
  <insert id="insertTepGenControllerUnitMethodList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO">
    INSERT INTO tep_gen_controller_unit_method
    (
    method_seq
    ,package_no
    ,controller_package_name
    ,controller_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,controller_method_name
    ,dataset_seq
    ,method_name
    ,method_param_class_name
    ,method_param_instant_name
    ,method_contents
    ,table_name
    ,add_dataset_param
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.methodSeq}
      ,#{item.packageNo}
      ,#{item.controllerPackageName}
      ,#{item.controllerClassName}
      ,#{item.methodAnnotationName}
      ,#{item.methodAccessor}
      ,#{item.methodReturnClassName}
      ,#{item.controllerMethodName}
      ,#{item.datasetSeq}
      ,#{item.methodName}
      ,#{item.methodParamClassName}
      ,#{item.methodParamInstantName}
      ,#{item.methodContents}
      ,#{item.tableName}
      ,#{item.addDatasetParam}
      )
    </foreach>
  </insert>
  <update id="updateTepGenControllerUnitMethodList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_controller_unit_method
      SET
      method_seq = #{item.methodSeq}
      ,package_no = #{item.packageNo}
      ,controller_package_name = #{item.controllerPackageName}
      ,controller_class_name = #{item.controllerClassName}
      ,method_annotation_name = #{item.methodAnnotationName}
      ,method_accessor = #{item.methodAccessor}
      ,method_return_class_name = #{item.methodReturnClassName}
      ,controller_method_name = #{item.controllerMethodName}
      ,dataset_seq = #{item.datasetSeq}
      ,method_name = #{item.methodName}
      ,method_param_class_name = #{item.methodParamClassName}
      ,method_param_instant_name = #{item.methodParamInstantName}
      ,method_contents = #{item.methodContents}
      ,table_name = #{item.tableName}
      ,add_dataset_param = #{item.addDatasetParam}
      WHERE 1=1
      AND method_seq = #{item.methodSeq}
    </foreach>
  </update>
  <delete id="deleteTepGenControllerUnitMethodList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO">
    DELETE FROM tep_gen_controller_unit_method
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        method_seq = #{item.methodSeq}
        )
      </foreach>
    </where>
  </delete>
  <select id="retrieveTepGenControllerUnitMethodListByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO"
  >
    SELECT
    method_seq
    ,package_no
    ,controller_package_name
    ,controller_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,controller_method_name
    ,dataset_seq
    ,method_name
    ,method_param_class_name
    ,method_param_instant_name
    ,method_contents
    ,table_name
    ,add_dataset_param
    FROM tep_gen_controller_unit_method
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        method_seq = #{item.methodSeq}
        )
      </foreach>
    </where>
  </select>
  <select id="retrieveTepGenControllerUnitMethodListAll"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenControllerUnitMethodEO"
  >
    SELECT
    uuid() as row_key
    ,method_seq
    ,package_no
    ,controller_package_name
    ,controller_class_name
    ,method_annotation_name
    ,method_accessor
    ,method_return_class_name
    ,controller_method_name
    ,dataset_seq
    ,method_name
    ,method_param_class_name
    ,method_param_instant_name
    ,method_contents
    ,table_name
    ,add_dataset_param
    FROM tep_gen_controller_unit_method
    <where>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodSeq)'>AND
        method_seq=#{methodSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(packageNo)'>AND
        package_no=#{packageNo}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerPackageName)'>AND
        controller_package_name=#{controllerPackageName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerClassName)'>AND
        controller_class_name=#{controllerClassName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodAnnotationName)'>AND
        method_annotation_name=#{methodAnnotationName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodAccessor)'>AND
        method_accessor=#{methodAccessor}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodReturnClassName)'>AND
        method_return_class_name=#{methodReturnClassName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerMethodName)'>AND
        controller_method_name=#{controllerMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(datasetSeq)'>AND
        dataset_seq=#{datasetSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodName)'>AND
        method_name=#{methodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodParamClassName)'>AND
        method_param_class_name=#{methodParamClassName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodParamInstantName)'>AND
        method_param_instant_name=#{methodParamInstantName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(methodContents)'>AND
        method_contents=#{methodContents}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(tableName)'>AND
        table_name=#{tableName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(addDatasetParam)'>AND
        add_dataset_param=#{addDatasetParam}
      </if>
    </where>
    order by package_no,controller_method_name, dataset_seq
  </select>
  <delete id="clearMetaData">
    delete
    from tep_gen_method_info
    where package_no = #{packageNo};
    delete
    from tep_gen_service_method_info
    where package_no = #{packageNo};
    delete
    from tep_gen_controller_method_info
    where package_no = #{packageNo};
    delete
    from tep_gen_controller_unit_method
    where package_no = #{packageNo};
    delete
    from tep_gen_file_info
    where package_no = #{packageNo};
    delete
    from tep_gen_mapper_method_info
    where package_no = #{packageNo};
    delete
    from tep_gen_model_info
    where package_no = #{packageNo};


  </delete>
  <insert id="insertTepGenModelInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO">
    INSERT INTO tep_gen_model_info
    (
    model_seq
    ,package_no
    ,package_name
    ,column_name
    ,column_type
    ,vo_name
    ,interface_name
    ,dataset_name
    ,member_name
    ,java_type
    ,ts_type
    ,null_yn
    ,lookup_yn
    ,lookup_type
    ,controller_method_name
    ,controller_dataset_method_seq
    ,api_interface_param
    ,util_api_get_method_name
    ,util_api_get_method_contents
    ,api_interface_resp_data
    ,util_get_factor_method_name
    ,util_get_object_method_name
    ,controller_save_method_name
    ,controller_save_method_seq
    )
    VALUES
    <foreach separator="," item="item" collection="list">
      (
      #{item.modelSeq}
      ,#{item.packageNo}
      ,#{item.packageName}
      ,#{item.columnName}
      ,#{item.columnType}
      ,#{item.voName}
      ,#{item.interfaceName}
      ,#{item.datasetName}
      ,#{item.memberName}
      ,#{item.javaType}
      ,#{item.tsType}
      ,#{item.nullYn}
      ,#{item.lookupYn}
      ,#{item.lookupType}
      ,#{item.controllerMethodName}
      ,#{item.controllerDatasetMethodSeq}
      ,#{item.apiInterfaceParam}
      ,#{item.utilApiGetMethodName}
      ,#{item.utilApiGetMethodContents}
      ,#{item.apiInterfaceRespData}
      ,#{item.utilGetFactorMethodName}
      ,#{item.utilGetObjectMethodName}
      ,#{item.controllerSaveMethodName}
      ,#{item.controllerSaveMethodSeq}
      )
    </foreach>
  </insert>
  <update id="updateTepGenModelInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO">
    <foreach separator=";" item="item" collection="list">
      UPDATE tep_gen_model_info
      SET
      model_seq = #{item.modelSeq}
      ,package_no = #{item.packageNo}
      ,package_name = #{item.packageName}
      ,column_name = #{item.columnName}
      ,column_type = #{item.columnType}
      ,vo_name = #{item.voName}
      ,interface_name = #{item.interfaceName}
      ,dataset_name = #{item.datasetName}
      ,member_name = #{item.memberName}
      ,java_type = #{item.javaType}
      ,ts_type = #{item.tsType}
      ,null_yn = #{item.nullYn}
      ,lookup_yn = #{item.lookupYn}
      ,lookup_type = #{item.lookupType}
      ,controller_method_name = #{item.controllerMethodName}
      ,controller_dataset_method_seq = #{item.controllerDatasetMethodSeq}
      ,api_interface_param = #{item.apiInterfaceParam}
      ,util_api_get_method_name = #{item.utilApiGetMethodName}
      ,util_api_get_method_contents = #{item.utilApiGetMethodContents}
      ,api_interface_resp_data = #{item.apiInterfaceRespData}
      ,util_get_factor_method_name = #{item.utilGetFactorMethodName}
      ,util_get_object_method_name = #{item.utilGetObjectMethodName}
      ,controller_save_method_name = #{item.controllerSaveMethodName}
      ,controller_save_method_seq = #{item.controllerSaveMethodSeq}
      WHERE 1=1
      AND model_seq = #{item.modelSeq}
    </foreach>
  </update>
  <delete id="deleteTepGenModelInfoList"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO">
    DELETE FROM tep_gen_model_info
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        model_seq = #{item.modelSeq}
        )
      </foreach>
    </where>
  </delete>
  <select id="retrieveTepGenModelInfoListByPk"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO"
  >
    SELECT
    model_seq
    ,package_no
    ,package_name
    ,column_name
    ,column_type
    ,vo_name
    ,interface_name
    ,dataset_name
    ,member_name
    ,java_type
    ,ts_type
    ,null_yn
    ,lookup_yn
    ,lookup_type
    ,controller_method_name
    ,controller_dataset_method_seq
    ,api_interface_param
    ,util_api_get_method_name
    ,util_api_get_method_contents
    ,api_interface_resp_data
    ,util_get_factor_method_name
    ,util_get_object_method_name
    ,controller_save_method_name
    ,controller_save_method_seq
    FROM tep_gen_model_info
    <where>
      <foreach collection="list" item="item" open="" close="" separator="OR">
        (
        model_seq = #{item.modelSeq}
        )
      </foreach>
    </where>
  </select>
  <select id="retrieveTepGenModelInfoListAll"
    parameterType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO"
    resultType="com.chs.boot.gerp.core.generate.model.TepGenModelInfoEO"
  >
    SELECT
    uuid() as row_key
    ,model_seq
    ,package_no
    ,package_name
    ,column_name
    ,column_type
    ,vo_name
    ,interface_name
    ,dataset_name
    ,member_name
    ,java_type
    ,ts_type
    ,null_yn
    ,lookup_yn
    ,lookup_type
    ,controller_method_name
    ,controller_dataset_method_seq
    ,api_interface_param
    ,util_api_get_method_name
    ,util_api_get_method_contents
    ,api_interface_resp_data
    ,util_get_factor_method_name
    ,util_get_object_method_name
    ,controller_save_method_name
    ,controller_save_method_seq
    FROM tep_gen_model_info
    <where>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(modelSeq)'>AND
        model_seq=#{modelSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(packageNo)'>AND
        package_no=#{packageNo}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(packageName)'>AND
        package_name=#{packageName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(columnName)'>AND
        column_name=#{columnName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(columnType)'>AND
        column_type=#{columnType}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(voName)'>AND
        vo_name=#{voName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(interfaceName)'>AND
        interface_name=#{interfaceName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(datasetName)'>AND
        dataset_name=#{datasetName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(memberName)'>AND
        member_name=#{memberName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(javaType)'>AND
        java_type=#{javaType}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(tsType)'>AND
        ts_type=#{tsType}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(nullYn)'>AND
        null_yn=#{nullYn}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(lookupYn)'>AND
        lookup_yn=#{lookupYn}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(lookupType)'>AND
        lookup_type=#{lookupType}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerMethodName)'>AND
        controller_method_name=#{controllerMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerDatasetMethodSeq)'>
        AND controller_dataset_method_seq=#{controllerDatasetMethodSeq}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(apiInterfaceParam)'>AND
        api_interface_param=#{apiInterfaceParam}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(utilApiGetMethodName)'>AND
        util_api_get_method_name=#{utilApiGetMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(utilApiGetMethodContents)'>
        AND util_api_get_method_contents=#{utilApiGetMethodContents}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(apiInterfaceRespData)'>AND
        api_interface_resp_data=#{apiInterfaceRespData}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(utilGetFactorMethodName)'>AND
        util_get_factor_method_name=#{utilGetFactorMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(utilGetObjectMethodName)'>AND
        util_get_object_method_name=#{utilGetObjectMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerSaveMethodName)'>
        AND controller_save_method_name=#{controllerSaveMethodName}
      </if>
      <if test='@com.chs.boot.common.util.CommonUtil@isNotNullAndEmpty(controllerSaveMethodSeq)'>AND
        controller_save_method_seq=#{controllerSaveMethodSeq}
      </if>
    </where>
  </select>
</mapper>